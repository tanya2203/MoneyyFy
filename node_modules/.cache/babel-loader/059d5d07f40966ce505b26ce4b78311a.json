{"ast":null,"code":"var _jsxFileName = \"/Users/tanyaverma/Desktop/Moneyyfy/MoneyFy/src/modules/home/TransactionComponent.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 10px 22px;\n  font-size: 18px;\n  width: 100%;\n  gap: 10px;\n  font-weight: bold;\n  font-family: \"Poppins\", sans-serif;\n  & input {\n    padding: 10px 12px;\n    border-radius: 12px;\n    background: white;\n    border: 2px solid black;\n    outline: none;\n    width: 100%;\n  }\n`;\n_c = Container;\nconst Cell = styled.div`\n  background-color: white;\n  width: 100%;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: row;\n  padding: 10px 15px;\n  font-size: 14px;\n  border-radius: 15px;\n  font-family: \"Poppins\", sans-serif;\n  border: 1px solid #e6e8e9;\n  align-items: center;\n  font-weight: normal;\n  justify-content: space-between;\n  border-right: 4px solid ${props => props.isExpense ? \"red\" : \"green\"};\n`;\n_c2 = Cell;\n\nconst TransactionCell = props => {\n  var _props$payload;\n\n  return /*#__PURE__*/_jsxDEV(Cell, {\n    isExpense: ((_props$payload = props.payload) === null || _props$payload === void 0 ? void 0 : _props$payload.type) === \"EXPENSE\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.payload.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\u20B9\", props.payload.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = TransactionCell;\n\nconst TransactionComponent = props => {\n  _s();\n\n  const [searchText, updateSearchText] = useState(\"\");\n  const [filteredTransaction, updateTxn] = useState(props.transactions);\n\n  const filterData = searchText => {\n    if (!searchText || !searchText.trim().length) {\n      updateTxn(props.transactions);\n      return;\n    }\n\n    let txn = [...props.transactions];\n    txn = txn.filter(payload => payload.desc.toLowerCase().includes(searchText.toLowerCase().trim()));\n    updateTxn(txn);\n  };\n\n  useEffect(() => {\n    filterData(searchText);\n  }, [props.transactions]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [\"Transaction\", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search\",\n      onChange: e => {\n        updateSearchText(e.target.value);\n        filterData(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), filteredTransaction === null || filteredTransaction === void 0 ? void 0 : filteredTransaction.map(payload => /*#__PURE__*/_jsxDEV(TransactionCell, {\n      payload: payload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionComponent, \"PjofenJ4s7DExlxtmxp+1Hj8fsc=\");\n\n_c4 = TransactionComponent;\nexport default TransactionComponent;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Cell\");\n$RefreshReg$(_c3, \"TransactionCell\");\n$RefreshReg$(_c4, \"TransactionComponent\");","map":{"version":3,"names":["styled","React","useState","useEffect","Container","div","Cell","props","isExpense","TransactionCell","payload","type","desc","amount","TransactionComponent","searchText","updateSearchText","filteredTransaction","updateTxn","transactions","filterData","trim","length","txn","filter","toLowerCase","includes","e","target","value","map"],"sources":["/Users/tanyaverma/Desktop/Moneyyfy/MoneyFy/src/modules/home/TransactionComponent.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 10px 22px;\r\n  font-size: 18px;\r\n  width: 100%;\r\n  gap: 10px;\r\n  font-weight: bold;\r\n  font-family: \"Poppins\", sans-serif;\r\n  & input {\r\n    padding: 10px 12px;\r\n    border-radius: 12px;\r\n    background: white;\r\n    border: 2px solid black;\r\n    outline: none;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Cell = styled.div`\r\n  background-color: white;\r\n  width: 100%;\r\n  color: #0d1d2c;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px 15px;\r\n  font-size: 14px;\r\n  border-radius: 15px;\r\n  font-family: \"Poppins\", sans-serif;\r\n  border: 1px solid #e6e8e9;\r\n  align-items: center;\r\n  font-weight: normal;\r\n  justify-content: space-between;\r\n  border-right: 4px solid ${(props) => (props.isExpense ? \"red\" : \"green\")};\r\n`;\r\n\r\nconst TransactionCell = (props) => {\r\n  return (\r\n    <Cell isExpense={props.payload?.type === \"EXPENSE\"}>\r\n      <span>{props.payload.desc}</span>\r\n      <span>â‚¹{props.payload.amount}</span>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nconst TransactionComponent = (props) => {\r\n  const [searchText, updateSearchText] = useState(\"\");\r\n  const [filteredTransaction, updateTxn] = useState(props.transactions);\r\n  const filterData = (searchText) => {\r\n    if (!searchText || !searchText.trim().length) {\r\n      updateTxn(props.transactions);\r\n      return;\r\n    }\r\n    let txn = [...props.transactions];\r\n    txn = txn.filter((payload) =>\r\n      payload.desc.toLowerCase().includes(searchText.toLowerCase().trim())\r\n    );\r\n    updateTxn(txn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterData(searchText);\r\n  }, [props.transactions]);\r\n  return (\r\n    <Container>\r\n      Transaction\r\n      <input\r\n        placeholder=\"Search\"\r\n        onChange={(e) => {\r\n          updateSearchText(e.target.value);\r\n          filterData(e.target.value);\r\n        }}\r\n      />\r\n      {filteredTransaction?.map((payload) => (\r\n        <TransactionCell payload={payload} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\nexport default TransactionComponent;\r\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;KAAMD,S;AAoBN,MAAME,IAAI,GAAGN,MAAM,CAACK,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA6BE,KAAD,IAAYA,KAAK,CAACC,SAAN,GAAkB,KAAlB,GAA0B,OAAS;AAC3E,CAfA;MAAMF,I;;AAiBN,MAAMG,eAAe,GAAIF,KAAD,IAAW;EAAA;;EACjC,oBACE,QAAC,IAAD;IAAM,SAAS,EAAE,mBAAAA,KAAK,CAACG,OAAN,kEAAeC,IAAf,MAAwB,SAAzC;IAAA,wBACE;MAAA,UAAOJ,KAAK,CAACG,OAAN,CAAcE;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,qBAAQL,KAAK,CAACG,OAAN,CAAcG,MAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAPD;;MAAMJ,e;;AASN,MAAMK,oBAAoB,GAAIP,KAAD,IAAW;EAAA;;EACtC,MAAM,CAACQ,UAAD,EAAaC,gBAAb,IAAiCd,QAAQ,CAAC,EAAD,CAA/C;EACA,MAAM,CAACe,mBAAD,EAAsBC,SAAtB,IAAmChB,QAAQ,CAACK,KAAK,CAACY,YAAP,CAAjD;;EACA,MAAMC,UAAU,GAAIL,UAAD,IAAgB;IACjC,IAAI,CAACA,UAAD,IAAe,CAACA,UAAU,CAACM,IAAX,GAAkBC,MAAtC,EAA8C;MAC5CJ,SAAS,CAACX,KAAK,CAACY,YAAP,CAAT;MACA;IACD;;IACD,IAAII,GAAG,GAAG,CAAC,GAAGhB,KAAK,CAACY,YAAV,CAAV;IACAI,GAAG,GAAGA,GAAG,CAACC,MAAJ,CAAYd,OAAD,IACfA,OAAO,CAACE,IAAR,CAAaa,WAAb,GAA2BC,QAA3B,CAAoCX,UAAU,CAACU,WAAX,GAAyBJ,IAAzB,EAApC,CADI,CAAN;IAGAH,SAAS,CAACK,GAAD,CAAT;EACD,CAVD;;EAYApB,SAAS,CAAC,MAAM;IACdiB,UAAU,CAACL,UAAD,CAAV;EACD,CAFQ,EAEN,CAACR,KAAK,CAACY,YAAP,CAFM,CAAT;EAGA,oBACE,QAAC,SAAD;IAAA,uCAEE;MACE,WAAW,EAAC,QADd;MAEE,QAAQ,EAAGQ,CAAD,IAAO;QACfX,gBAAgB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;QACAT,UAAU,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;MACD;IALH;MAAA;MAAA;MAAA;IAAA,QAFF,EASGZ,mBATH,aASGA,mBATH,uBASGA,mBAAmB,CAAEa,GAArB,CAA0BpB,OAAD,iBACxB,QAAC,eAAD;MAAiB,OAAO,EAAEA;IAA1B;MAAA;MAAA;MAAA;IAAA,QADD,CATH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAjCD;;GAAMI,oB;;MAAAA,oB;AAkCN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}